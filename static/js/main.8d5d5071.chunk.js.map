{"version":3,"sources":["Fadel Foto.jpg","latihan.js","serviceWorker.js","index.js"],"names":["module","exports","Latihan","class","src","foto","className","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,wC,mNCyE1BC,E,uKA7DX,OACE,yBAAKC,MAAM,aACX,+CACI,yBAAKA,MAAQ,WACb,yBAAKC,IAAOC,IAAMC,UAAY,SAG9B,gJAOA,yBAAKH,MAAO,WACZ,0CACA,oWAKA,4CAEA,4BACA,oJACA,uIAGZ,2DAIA,4BACI,kDACA,uDACA,4DAEJ,yCACA,4BACA,qCACA,sCACA,sCACA,gDAIA,yCACA,gM,GAjDsBI,aCEFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,SD6H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8d5d5071.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Fadel Foto.7110d768.jpg\";","import React, { Component } from 'react';\r\nimport './CSS/latihanjs.scss';\r\nimport foto from './Fadel Foto.jpg'\r\n\r\nfunction Greeting(props){\r\nreturn <h1>Curiculum Vitae{props.name}umurnya adalah {props.age}</h1>\r\n}\r\n\r\n\r\n\r\nclass Latihan extends Component{\r\n    render(){\r\n      return(\r\n        <div class=\"container\">\r\n        <h1>Curiculum Vitae</h1>\r\n            <div class = \"biodata\">\r\n            <img src = {foto} className = \"foto\"></img>\r\n\r\n\r\n            <h4>Jalan Raya Bogor Rt.05/10 no.28\r\n                Kramat Jati,Jakarta Timur\r\n                Cell+(62)-838-94535352\r\n                E-MAIL fadelalatas81@gmail.com</h4>\r\n                </div>\r\n\r\n\r\n            <div class =\"summary\">\r\n            <h4>Summary : </h4>\r\n            <p>A highly motivated and dedicated computer science graduate from a prestigious university in\r\nIndonesia and a certified engineer in database management system . Currently, actively looking for an\r\nopportunity to expand my knowledge and skills in any industry that needs for young talent in\r\ninformation or operation technologies.</p>\r\n\r\n            <h4>Education : </h4>\r\n\r\n            <ul>\r\n            <li>Bachelor Degree of Computer Science from Gunadarma University – Jakarta ,Indonesia(graduated on Dec 15th, 2019)</li>\r\n            <li>Budi Warman 1 Senior High School – East Jakarta, DKI Jakarta, Indonesia (graduated in\r\nApril 2015)</li></ul>\r\n\r\n<h4>Training and Certificate : </h4>     \r\n\r\n\r\n\r\n<ul>\r\n    <li>Sql Server Project</li>\r\n    <li>Oracle for Intermediate</li>\r\n    <li>Sql Server for intermediate</li>\r\n</ul>\r\n<h4>Skills : </h4>\r\n<ul>\r\n<li>Mysql</li>\r\n<li>Python</li>\r\n<li>Oracle</li>\r\n<li>Microsot Office</li>\r\n\r\n</ul>\r\n\r\n<h4>Project :</h4>\r\n<p>Making E-Commerce Website Computer Tools Using Php and\r\nMysql.( Submitted to complete some of the requirements in achieving\r\na bachelor's degree equivalent.)</p>\r\n\r\n\r\n            </div>\r\n        \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  export default Latihan;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.scss';\nimport Latihan from './latihan';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Latihan />,document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}